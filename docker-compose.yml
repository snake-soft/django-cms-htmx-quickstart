version: "3"


volumes:
  django_media:
  django_static:
  postgres_data:


services:
  site_1:
    image: docker.io/snakesoft/django-cms-htmx:${BUILD:-latest}
    restart: unless-stopped
    user: 1000:1000
    volumes:
      - django_media:/app/media/:rw
      - django_static:/app/staticfiles_collected/:rw
    depends_on:
      - db
    environment:
      SITE_ID: ${SITE_ID_1:-1}
      DEBUG: ${DEBUG:-False}
      DOMAIN: ${DOMAIN_1:-localhost}
      DATABASE_URL: ${DATABASE_URL}
    command:
      - /bin/bash
      - -c
      - |
        ./manage.py migrate
        ./manage.py collectstatic --noinput
        gunicorn --bind 0.0.0.0:8000 backend.wsgi:application
    profiles: ["all", "deploy", "upgrade", "dev"]

  web_1:
    image: docker.io/snakesoft/djanginx:1.0
    restart: unless-stopped
    depends_on:
      - site_1
    volumes:
      - django_media:/app/media/:ro
      - django_static:/app/static_root/:ro
    environment:
      LISTEN_DOMAIN: ${DOMAIN_1:-localhost}
      SITE_HOSTNAME: site_1
    ports:
      - "${PORT_1:-80}:80"
    profiles: ["all", "deploy", "upgrade", "dev"]

  db:
    image: postgres:15.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "db"
      POSTGRES_PASSWORD: "db"
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    profiles: ["all", "deploy", "upgrade", "dev"]

  upgrader:
    image: docker:20.10.22-git
    restart: unless-stopped
    working_dir: /app
    tty: true
    environment:
      UPGRADE: ${UPGRADE:-false}
      UPGRADE_CI: ${UPGRADE_CI:-false}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /root/.ssh/:/root/.ssh/:ro
      - .:/app:rw
    command: /bin/sh -c "/app/upgrader.sh"
    profiles: ["all", "deploy"]

